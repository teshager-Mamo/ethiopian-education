{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lyu\\\\Music\\\\ethiopian-education-main\\\\ethiopian-education-main\\\\src\\\\pages\\\\Summary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useContext } from 'react';\nimport { Box, Grid, Typography, Paper, Fade, FormControl, InputLabel, Select, MenuItem, Card, CardContent } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { Line, Pie } from 'react-chartjs-2';\nimport { DataContext } from '../context/DataContext';\nimport SummaryStats from '../components/charts/SummaryStats';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ethiopianMapUrl = 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Flag_of_Ethiopia.svg/1200px-Flag_of_Ethiopia.svg.png';\nconst educationIconUrl = 'https://png.pngtree.com/png-vector/20230417/ourmid/pngtree-3d-graduation-cap-icon-vector-png-image_6704102.png';\nconst Summary = () => {\n  _s();\n  const {\n    data,\n    dataType\n  } = useContext(DataContext);\n  const theme = useTheme();\n  const chartRefs = {\n    lineChartRef: /*#__PURE__*/React.createRef(),\n    pieChartRef: /*#__PURE__*/React.createRef()\n  };\n  const [collegeFilter, setCollegeFilter] = useState('All');\n\n  // Log data for debugging\n  console.log('Raw Data:', data);\n  console.log('Data Type:', dataType);\n\n  // Filtering and validating data\n  const filteredData = useMemo(() => {\n    if (!data || !Array.isArray(data)) return [];\n    return data.filter(student => {\n      const isValidSex = !student.Sex || student.Sex === 'Male' || student.Sex === 'Female'; // Relax Sex filter\n      const isValidCollege = dataType === 'HighSchool' || collegeFilter === 'All' || student.College && student.College === collegeFilter;\n      const isValidScore = dataType === 'HighSchool' ? !isNaN(Number(student.average)) && student.average !== null && student.average !== undefined : !isNaN(Number(student.Score)) && student.Score !== null && student.Score !== undefined;\n      return isValidSex && isValidCollege && isValidScore;\n    });\n  }, [data, dataType, collegeFilter]);\n\n  // Get unique colleges and their student counts\n  const collegeInfo = useMemo(() => {\n    if (!data || !Array.isArray(data) || dataType !== 'University') return [];\n    const collegeMap = data.reduce((acc, student) => {\n      const college = student.College;\n      if (college && typeof college === 'string') {\n        acc[college] = (acc[college] || 0) + 1;\n      }\n      return acc;\n    }, {});\n    return Object.entries(collegeMap).map(([college, count]) => ({\n      college,\n      count\n    }));\n  }, [data, dataType]);\n  const collegeOptions = ['All', ...new Set(collegeInfo.map(({\n    college\n  }) => college))];\n\n  // Line Chart Data\n  const getLineChartData = () => {\n    if (!filteredData || filteredData.length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{\n          label: 'Average Score',\n          data: [0],\n          borderColor: '#ccc'\n        }]\n      };\n    }\n    if (dataType === 'HighSchool') {\n      const ageGroups = [...new Set(filteredData.map(student => student.age).filter(age => age))].sort((a, b) => a - b);\n      const averageScores = ageGroups.map(ageGroup => {\n        const ageData = filteredData.filter(student => student.age === ageGroup);\n        const validScores = ageData.map(student => Number(student.average)).filter(score => !isNaN(score));\n        return validScores.length > 0 ? (validScores.reduce((sum, score) => sum + score, 0) / validScores.length).toFixed(2) : 0;\n      });\n      return {\n        labels: ageGroups,\n        datasets: [{\n          label: 'Average Score',\n          data: averageScores,\n          fill: false,\n          borderColor: theme.palette.primary.main,\n          tension: 0.1\n        }]\n      };\n    } else if (dataType === 'University') {\n      const years = [...new Set(filteredData.map(student => student['Degree Awarded Date']).filter(year => year && !isNaN(year)))].sort();\n      const colleges = collegeFilter === 'All' ? [...new Set(filteredData.map(student => student.College).filter(college => college))].sort() : [collegeFilter];\n      const datasets = colleges.map((college, index) => {\n        const averageScores = years.map(year => {\n          const yearData = filteredData.filter(student => student['Degree Awarded Date'] === year && student.College === college);\n          const validScores = yearData.map(student => Number(student.Score)).filter(score => !isNaN(score));\n          return validScores.length > 0 ? (validScores.reduce((sum, score) => sum + score, 0) / validScores.length).toFixed(2) : 0;\n        });\n        return {\n          label: college,\n          data: averageScores,\n          fill: false,\n          borderColor: [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.chartAccent.main, '#4CAF50', '#FF9800', '#2196F3', '#9C27B0'][index % 7],\n          tension: 0.1\n        };\n      });\n      return {\n        labels: years,\n        datasets\n      };\n    }\n    return {\n      labels: ['No Data'],\n      datasets: [{\n        label: 'Average Score',\n        data: [0],\n        borderColor: '#ccc'\n      }]\n    };\n  };\n\n  // Pie Chart Data\n  const getPieChartData = () => {\n    if (!filteredData || filteredData.length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{\n          label: 'Distribution',\n          data: [1],\n          backgroundColor: '#ccc'\n        }]\n      };\n    }\n    if (dataType === 'HighSchool') {\n      const classes = [...new Set(filteredData.map(student => student.predictionclass).filter(cls => cls))];\n      const classCounts = classes.map(cls => {\n        return filteredData.filter(student => student.predictionclass === cls).length;\n      });\n      return {\n        labels: classes,\n        datasets: [{\n          label: 'Student Distribution by Performance',\n          data: classCounts,\n          backgroundColor: [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.chartAccent.main, '#4CAF50', '#FF9800', '#2196F3', '#9C27B0'],\n          borderColor: '#fff',\n          borderWidth: 1\n        }]\n      };\n    } else if (dataType === 'University') {\n      const statuses = ['poor', 'good', 'exellent'];\n      const statusCounts = statuses.map(status => {\n        return filteredData.filter(student => student.status && student.status.toLowerCase() === status).length;\n      });\n      return {\n        labels: statuses,\n        datasets: [{\n          label: `Student Distribution by Status (${collegeFilter === 'All' ? 'All Colleges' : collegeFilter})`,\n          data: statusCounts,\n          backgroundColor: [theme.palette.error.main,\n          // poor\n          theme.palette.success.main,\n          // good\n          theme.palette.warning.main // exellent\n          ],\n          borderColor: '#fff',\n          borderWidth: 1\n        }]\n      };\n    }\n    return {\n      labels: ['No Data'],\n      datasets: [{\n        label: 'Distribution',\n        data: [1],\n        backgroundColor: '#ccc'\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Fade, {\n    in: true,\n    timeout: 1000,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        p: 4,\n        bgcolor: theme.palette.background.default\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        gutterBottom: true,\n        align: \"center\",\n        color: \"primary\",\n        sx: {\n          fontWeight: 'bold',\n          mb: 4\n        },\n        children: dataType === 'University' ? '' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [dataType === 'University' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                boxShadow: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  color: \"text.primary\",\n                  children: \"Filter by College\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"college-filter-label\",\n                    children: \"College\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"college-filter-label\",\n                    value: collegeFilter,\n                    label: \"College\",\n                    onChange: e => setCollegeFilter(e.target.value),\n                    children: collegeOptions.map(college => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: college,\n                      children: college\n                    }, college, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              color: \"text.primary\",\n              sx: {\n                mb: 2\n              },\n              children: \"Colleges and Student Enrollment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: collegeInfo.map(({\n                college,\n                count\n              }) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  sx: {\n                    boxShadow: 3,\n                    bgcolor: theme.palette.background.paper\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"primary\",\n                      gutterBottom: true,\n                      children: college\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      color: \"text.secondary\",\n                      children: [count, \" Student\", count !== 1 ? 's' : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this)\n              }, college, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: dataType === 'University' ? 8 : 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              boxShadow: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                color: \"text.primary\",\n                children: dataType === 'University' ? 'Average Scores by Degree Awarded Year' : 'Average Scores by Age Group'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 350\n                },\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  ref: chartRefs.lineChartRef,\n                  data: getLineChartData(),\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                      y: {\n                        beginAtZero: true,\n                        title: {\n                          display: true,\n                          text: 'Average Score'\n                        }\n                      },\n                      x: {\n                        title: {\n                          display: true,\n                          text: dataType === 'University' ? 'Degree Awarded Year' : 'Age Group'\n                        }\n                      }\n                    },\n                    plugins: {\n                      legend: {\n                        position: 'top'\n                      },\n                      tooltip: {\n                        mode: 'index',\n                        intersect: false\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              boxShadow: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                color: \"text.primary\",\n                children: dataType === 'University' ? 'Student Distribution by Status' : 'Student Distribution by Performance'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 350\n                },\n                children: /*#__PURE__*/_jsxDEV(Pie, {\n                  ref: chartRefs.pieChartRef,\n                  data: getPieChartData(),\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    plugins: {\n                      legend: {\n                        position: 'top'\n                      },\n                      tooltip: {\n                        callbacks: {\n                          label: context => `${context.label}: ${context.raw}`\n                        }\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              boxShadow: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                color: \"text.primary\",\n                children: \"Summary Statistics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SummaryStats, {\n                data: filteredData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sx: {\n            textAlign: 'center',\n            mt: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: ethiopianMapUrl,\n            alt: \"Ethiopian Map\",\n            style: {\n              width: 80,\n              marginRight: 16\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: educationIconUrl,\n            alt: \"Education Icon\",\n            style: {\n              width: 80\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(Summary, \"Rf7dBxAj0SyDy0Cf88u6Ajmg2x0=\", false, function () {\n  return [useTheme];\n});\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useState","useMemo","useContext","Box","Grid","Typography","Paper","Fade","FormControl","InputLabel","Select","MenuItem","Card","CardContent","useTheme","Line","Pie","DataContext","SummaryStats","jsxDEV","_jsxDEV","Fragment","_Fragment","ethiopianMapUrl","educationIconUrl","Summary","_s","data","dataType","theme","chartRefs","lineChartRef","createRef","pieChartRef","collegeFilter","setCollegeFilter","console","log","filteredData","Array","isArray","filter","student","isValidSex","Sex","isValidCollege","College","isValidScore","isNaN","Number","average","undefined","Score","collegeInfo","collegeMap","reduce","acc","college","Object","entries","map","count","collegeOptions","Set","getLineChartData","length","labels","datasets","label","borderColor","ageGroups","age","sort","a","b","averageScores","ageGroup","ageData","validScores","score","sum","toFixed","fill","palette","primary","main","tension","years","year","colleges","index","yearData","secondary","chartAccent","getPieChartData","backgroundColor","classes","predictionclass","cls","classCounts","borderWidth","statuses","statusCounts","status","toLowerCase","error","success","warning","in","timeout","children","sx","flexGrow","p","bgcolor","background","default","variant","gutterBottom","align","color","fontWeight","mb","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","height","boxShadow","fullWidth","id","labelId","value","onChange","e","target","sm","paper","ref","options","responsive","maintainAspectRatio","scales","y","beginAtZero","title","display","text","x","plugins","legend","position","tooltip","mode","intersect","callbacks","context","raw","textAlign","mt","src","alt","style","width","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/lyu/Music/ethiopian-education-main/ethiopian-education-main/src/pages/Summary.js"],"sourcesContent":["import React, { useState, useMemo, useContext } from 'react';\nimport { Box, Grid, Typography, Paper, Fade, FormControl, InputLabel, Select, MenuItem, Card, CardContent } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { Line, Pie } from 'react-chartjs-2';\nimport { DataContext } from '../context/DataContext';\nimport SummaryStats from '../components/charts/SummaryStats';\n\nconst ethiopianMapUrl = 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Flag_of_Ethiopia.svg/1200px-Flag_of_Ethiopia.svg.png';\nconst educationIconUrl = 'https://png.pngtree.com/png-vector/20230417/ourmid/pngtree-3d-graduation-cap-icon-vector-png-image_6704102.png';\n\nconst Summary = () => {\n  const { data, dataType } = useContext(DataContext);\n  const theme = useTheme();\n  const chartRefs = {\n    lineChartRef: React.createRef(),\n    pieChartRef: React.createRef(),\n  };\n  const [collegeFilter, setCollegeFilter] = useState('All');\n\n  // Log data for debugging\n  console.log('Raw Data:', data);\n  console.log('Data Type:', dataType);\n\n  // Filtering and validating data\n  const filteredData = useMemo(() => {\n    if (!data || !Array.isArray(data)) return [];\n    return data.filter((student) => {\n      const isValidSex = !student.Sex || student.Sex === 'Male' || student.Sex === 'Female'; // Relax Sex filter\n      const isValidCollege = dataType === 'HighSchool' || collegeFilter === 'All' || (student.College && student.College === collegeFilter);\n      const isValidScore = dataType === 'HighSchool'\n        ? !isNaN(Number(student.average)) && student.average !== null && student.average !== undefined\n        : !isNaN(Number(student.Score)) && student.Score !== null && student.Score !== undefined;\n      return isValidSex && isValidCollege && isValidScore;\n    });\n  }, [data, dataType, collegeFilter]);\n\n  // Get unique colleges and their student counts\n  const collegeInfo = useMemo(() => {\n    if (!data || !Array.isArray(data) || dataType !== 'University') return [];\n    const collegeMap = data.reduce((acc, student) => {\n      const college = student.College;\n      if (college && typeof college === 'string') {\n        acc[college] = (acc[college] || 0) + 1;\n      }\n      return acc;\n    }, {});\n    return Object.entries(collegeMap).map(([college, count]) => ({ college, count }));\n  }, [data, dataType]);\n\n  const collegeOptions = ['All', ...new Set(collegeInfo.map(({ college }) => college))];\n\n  // Line Chart Data\n  const getLineChartData = () => {\n    if (!filteredData || filteredData.length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{ label: 'Average Score', data: [0], borderColor: '#ccc' }],\n      };\n    }\n\n    if (dataType === 'HighSchool') {\n      const ageGroups = [...new Set(filteredData.map((student) => student.age).filter(age => age))].sort((a, b) => a - b);\n      const averageScores = ageGroups.map((ageGroup) => {\n        const ageData = filteredData.filter((student) => student.age === ageGroup);\n        const validScores = ageData\n          .map((student) => Number(student.average))\n          .filter((score) => !isNaN(score));\n        return validScores.length > 0\n          ? (validScores.reduce((sum, score) => sum + score, 0) / validScores.length).toFixed(2)\n          : 0;\n      });\n\n      return {\n        labels: ageGroups,\n        datasets: [\n          {\n            label: 'Average Score',\n            data: averageScores,\n            fill: false,\n            borderColor: theme.palette.primary.main,\n            tension: 0.1,\n          },\n        ],\n      };\n    } else if (dataType === 'University') {\n      const years = [...new Set(filteredData.map((student) => student['Degree Awarded Date']).filter(year => year && !isNaN(year)))].sort();\n      const colleges = collegeFilter === 'All'\n        ? [...new Set(filteredData.map((student) => student.College).filter(college => college))].sort()\n        : [collegeFilter];\n\n      const datasets = colleges.map((college, index) => {\n        const averageScores = years.map((year) => {\n          const yearData = filteredData.filter((student) => student['Degree Awarded Date'] === year && student.College === college);\n          const validScores = yearData\n            .map((student) => Number(student.Score))\n            .filter((score) => !isNaN(score));\n          return validScores.length > 0\n            ? (validScores.reduce((sum, score) => sum + score, 0) / validScores.length).toFixed(2)\n            : 0;\n        });\n\n        return {\n          label: college,\n          data: averageScores,\n          fill: false,\n          borderColor: [\n            theme.palette.primary.main,\n            theme.palette.secondary.main,\n            theme.palette.chartAccent.main,\n            '#4CAF50',\n            '#FF9800',\n            '#2196F3',\n            '#9C27B0',\n          ][index % 7],\n          tension: 0.1,\n        };\n      });\n\n      return {\n        labels: years,\n        datasets,\n      };\n    }\n\n    return {\n      labels: ['No Data'],\n      datasets: [{ label: 'Average Score', data: [0], borderColor: '#ccc' }],\n    };\n  };\n\n  // Pie Chart Data\n  const getPieChartData = () => {\n    if (!filteredData || filteredData.length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{ label: 'Distribution', data: [1], backgroundColor: '#ccc' }],\n      };\n    }\n\n    if (dataType === 'HighSchool') {\n      const classes = [...new Set(filteredData.map((student) => student.predictionclass).filter(cls => cls))];\n      const classCounts = classes.map((cls) => {\n        return filteredData.filter((student) => student.predictionclass === cls).length;\n      });\n\n      return {\n        labels: classes,\n        datasets: [\n          {\n            label: 'Student Distribution by Performance',\n            data: classCounts,\n            backgroundColor: [\n              theme.palette.primary.main,\n              theme.palette.secondary.main,\n              theme.palette.chartAccent.main,\n              '#4CAF50',\n              '#FF9800',\n              '#2196F3',\n              '#9C27B0',\n            ],\n            borderColor: '#fff',\n            borderWidth: 1,\n          },\n        ],\n      };\n    } else if (dataType === 'University') {\n      const statuses = ['poor', 'good', 'exellent'];\n      const statusCounts = statuses.map((status) => {\n        return filteredData.filter((student) => student.status && student.status.toLowerCase() === status).length;\n      });\n\n      return {\n        labels: statuses,\n        datasets: [\n          {\n            label: `Student Distribution by Status (${collegeFilter === 'All' ? 'All Colleges' : collegeFilter})`,\n            data: statusCounts,\n            backgroundColor: [\n              theme.palette.error.main, // poor\n              theme.palette.success.main, // good\n              theme.palette.warning.main, // exellent\n            ],\n            borderColor: '#fff',\n            borderWidth: 1,\n          },\n        ],\n      };\n    }\n\n    return {\n      labels: ['No Data'],\n      datasets: [{ label: 'Distribution', data: [1], backgroundColor: '#ccc' }],\n    };\n  };\n\n  return (\n    <Fade in timeout={1000}>\n      <Box sx={{ flexGrow: 1, p: 4, bgcolor: theme.palette.background.default }}>\n        <Typography variant=\"h3\" gutterBottom align=\"center\" color=\"primary\" sx={{ fontWeight: 'bold', mb: 4 }}>\n          {dataType === 'University' ? '' : ''}\n        </Typography>\n\n        <Grid container spacing={3}>\n          {/* College Filter and Stats (University Only) */}\n          {dataType === 'University' && (\n            <>\n              <Grid item xs={12} md={4}>\n                <Card sx={{ height: '100%', boxShadow: 3 }}>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom color=\"text.primary\">\n                      Filter by College\n                    </Typography>\n                    <FormControl fullWidth>\n                      <InputLabel id=\"college-filter-label\">College</InputLabel>\n                      <Select\n                        labelId=\"college-filter-label\"\n                        value={collegeFilter}\n                        label=\"College\"\n                        onChange={(e) => setCollegeFilter(e.target.value)}\n                      >\n                        {collegeOptions.map((college) => (\n                          <MenuItem key={college} value={college}>\n                            {college}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </CardContent>\n                </Card>\n              </Grid>\n\n              {/* College Student Counts */}\n              <Grid item xs={12}>\n                <Typography variant=\"h5\" gutterBottom color=\"text.primary\" sx={{ mb: 2 }}>\n                  Colleges and Student Enrollment\n                </Typography>\n                <Grid container spacing={2}>\n                  {collegeInfo.map(({ college, count }) => (\n                    <Grid item xs={12} sm={6} md={4} key={college}>\n                      <Card sx={{ boxShadow: 3, bgcolor: theme.palette.background.paper }}>\n                        <CardContent>\n                          <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                            {college}\n                          </Typography>\n                          <Typography variant=\"body1\" color=\"text.secondary\">\n                            {count} Student{count !== 1 ? 's' : ''}\n                          </Typography>\n                        </CardContent>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </>\n          )}\n\n          {/* Line Chart */}\n          <Grid item xs={12} md={dataType === 'University' ? 8 : 12}>\n            <Card sx={{ boxShadow: 3 }}>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom color=\"text.primary\">\n                  {dataType === 'University' ? 'Average Scores by Degree Awarded Year' : 'Average Scores by Age Group'}\n                </Typography>\n                <Box sx={{ height: 350 }}>\n                  <Line\n                    ref={chartRefs.lineChartRef}\n                    data={getLineChartData()}\n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      scales: {\n                        y: {\n                          beginAtZero: true,\n                          title: { display: true, text: 'Average Score' },\n                        },\n                        x: {\n                          title: { display: true, text: dataType === 'University' ? 'Degree Awarded Year' : 'Age Group' },\n                        },\n                      },\n                      plugins: {\n                        legend: { position: 'top' },\n                        tooltip: { mode: 'index', intersect: false },\n                      },\n                    }}\n                  />\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Pie Chart */}\n          <Grid item xs={12} md={4}>\n            <Card sx={{ boxShadow: 3 }}>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom color=\"text.primary\">\n                  {dataType === 'University' ? 'Student Distribution by Status' : 'Student Distribution by Performance'}\n                </Typography>\n                <Box sx={{ height: 350 }}>\n                  <Pie\n                    ref={chartRefs.pieChartRef}\n                    data={getPieChartData()}\n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      plugins: {\n                        legend: { position: 'top' },\n                        tooltip: { callbacks: { label: (context) => `${context.label}: ${context.raw}` } },\n                      },\n                    }}\n                  />\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Summary Stats */}\n          <Grid item xs={12}>\n            <Card sx={{ boxShadow: 3 }}>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom color=\"text.primary\">\n                  Summary Statistics\n                </Typography>\n                <SummaryStats data={filteredData} />\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Decorative Images */}\n          <Grid item xs={12} sx={{ textAlign: 'center', mt: 4 }}>\n            <img src={ethiopianMapUrl} alt=\"Ethiopian Map\" style={{ width: 80, marginRight: 16 }} />\n            <img src={educationIconUrl} alt=\"Education Icon\" style={{ width: 80 }} />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fade>\n  );\n};\n\nexport default Summary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}